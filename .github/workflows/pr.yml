name: Pull Request Checks

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Checks

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --extra dev --extra test

    - name: Run ruff linting
      run: uv run ruff check .

    - name: Run ruff formatting check
      run: uv run ruff format --check .

    - name: Run mypy type checking
      run: uv run mypy src/

    - name: Run tests
      run: uv run pytest tests/ -v

    - name: Run pre-commit hooks
      run: |
        uv run pre-commit install
        uv run pre-commit run --all-files

  security:
    runs-on: ubuntu-latest
    name: Security Checks

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --extra dev

    - name: Run bandit security checks
      run: |
        uv run bandit -r src/ -f json -o bandit-report.json -c pyproject.toml || true
        uv run bandit -r src/ -f txt -c pyproject.toml

  build-test:
    runs-on: ubuntu-latest
    name: Build and Test Application

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --extra test

    - name: Start FastAPI application
      run: |
        nohup uv run uvicorn src.main:app --host 127.0.0.1 --port 8080 > uvicorn.log 2>&1 &
        sleep 5

    - name: Test API endpoints
      run: |
        # Test main page
        curl -f http://127.0.0.1:8080/ || exit 1

        # Test API endpoints
        curl -f http://127.0.0.1:8080/api/portfolio || exit 1
        curl -f http://127.0.0.1:8080/api/experience || exit 1
        curl -f http://127.0.0.1:8080/api/skills || exit 1
        curl -f http://127.0.0.1:8080/api/education || exit 1
        curl -f http://127.0.0.1:8080/api/certifications || exit 1

        echo "âœ… All API endpoints working correctly"
